{"version":3,"sources":["components/StationInfo.tsx","components/RouteSchedule.tsx","views/App.tsx","views/Documentation.tsx","gp-api/TrajservGpApi.jsx","views/GtfsRT.tsx","views/GtfsOL.tsx","Root.tsx","serviceWorker.ts","index.tsx"],"names":["RouteShape","styled","div","isStationPassed","RoutePoint","isFirstStation","isLastStation","StationLabel","isNotStation","StationInfo","map","station","alignment","padding","style","display","alignItems","justifyContent","width","flexWrap","marginRight","color","getDelayColor","arrivalDelay","getDelayString","getHoursAndMinutes","arrivalTime","departureDelay","departureTime","onClick","flyTo","center","coordinates","essential","stationName","ContentFadeInAnimation","keyframes","ContentContainer","RouteScheduleContainer","modalWidth","translateStyle","VehicleIcon","span","CloseIcon","HideIcon","isNotStop","stop","isPassed","time","timeToCompare","delayToCompare","RouteSchedule","vehicle","trackerLayer","setSelectedVehicle","useState","hideModal","setHideModal","className","prevState","selectedVehicleId","getSource","removeLayer","removeSource","backgroundColor","shortName","fontWeight","longName","fontSize","vehicleTypes","vehicleType","operator","marginTop","stations","index","key","stationId","currTime","length","App","setTrackerLayer","setMap","selectedVehicle","_setSelectedVehicle","selectedVehicleRef","useRef","newState","current","useEffect","TEST_API_KEY","a","fetch","then","res","json","fetchApiKey","mapboxMap","Map","container","zoom","addControl","NavigationControl","showCompass","dragRotate","disable","touchZoomRotate","disableRotation","tracker","TrajservLayer","url","apiKey","highlightTrajectory","api","fetchTrajectoryById","getParams","id","journeyId","getUTCTimeString","traj","multiLine","p","trajectoryColor","c","forEach","line","point","push","transformCoords","x","y","stationsCoords","addSource","type","data","properties","geometry","addLayer","source","paint","layout","catch","on","init","height","position","flex","tabIndex","top","right","zIndex","href","target","rel","src","alt","BASE_URL","KEY","MethodButton","button","isSelected","Methods","Documentation","selectedMethod","setSelectedMethod","response","setResponse","referencesResponse","setReferencesResponse","setMethodsList","setResponses","resString","list","JSON","stringify","entry","dangerouslySetInnerHTML","__html","references","refRes","Object","keys","borderRadius","marginLeft","clearCurrentReponses","blockMethod","console","log","shapeMethod","polyline","decode","points","reverse","stopMethod","scheduleForStopMethod","shapesIdsForAgencyMethod","routesForLocationMethod","tripsForLocationMethod","stopsForLocationMethod","arrivalsAndDeparturesForStopMethod","getMethodRef","method","window","globalConfig","FORMAT","apiResponseFormat","apiUrl","TrajservGpApi","fetchTrajectories","params","abortController","date","btime","etime","bbox","dateFormatted","slice","startTime","Date","parse","endTime","bboxCoords","split","firstCoords","secondCoords","translatedFirstCoords","translatedSecondCoords","latFrom","lonFrom","latTo","lonTo","signal","d","trajectories","trajectory","LineString","e","tripId","stopTimes","schedule","serviceDate","agencies","trips","routes","stops","trip","find","routeId","tripHeadsign","route","agencyId","textColor","agency","timezone","name","stopTime","stopId","lat","lon","stopName","wheelchairBoarding","undefined","cancelled","noDropOff","noPickUp","wheelchairAccessible","bicyclesAllowed","destination","feedsId","operatingInformations","operatorTimeZone","operatorUrl","realTime","routeIdentifier","err","TrajservAPI","INTERVAL","interval","GtfsRT","requestIntervalSeconds","GtfsOL","olMap","view","View","layer","MapboxLayer","Root","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"uiCASA,IAAMA,EAAaC,IAAOC,IAAV,KAEM,qBAAGC,gBACH,QAAU,UAO1BC,EAAaH,IAAOC,IAAV,KACM,qBAAGC,gBACH,OAAS,UAQtB,YAAwC,IAArCE,EAAoC,EAApCA,eAAgBC,EAAoB,EAApBA,cACxB,OAAID,EACK,IAELC,EACK,OAEF,SAEI,qBAAGD,eACG,oBAAsB,2BAGrCE,EAAeN,IAAOC,IAAV,KAKP,qBAAGM,aAAmC,OAAS,WAwG3CC,EAlGK,SAAC,GAOd,IANLC,EAMI,EANJA,IACAC,EAKI,EALJA,QACAR,EAII,EAJJA,gBACAK,EAGI,EAHJA,aACAH,EAEI,EAFJA,eACAC,EACI,EADJA,cAEIM,EAAY,SACdC,EAAU,QAQZ,OAPIR,GACFO,EAAY,aACZC,EAAU,aACDP,IACTM,EAAY,WACZC,EAAU,aAGV,yBACEC,MAAO,CACLC,QAAS,OACTC,WAAYJ,EACZK,eAAgB,eAGlB,yBACEH,MAAO,CACLI,MAAO,OACPL,QAASA,IAGTR,GAAmBG,EAuBjB,KAtBF,yBACEM,MAAO,CACLC,QAAS,OACTE,eAAgB,WAChBE,SAAU,WAGXhB,EAAkB,KACjB,0BACEW,MAAO,CACLM,YAAa,MACbC,MAAOC,YAAcX,EAAQY,gBAG9BZ,EAAQY,aAAR,WACOC,YAAeb,EAAQY,eAC3B,MAIR,8BAAOE,YAAmBd,EAAQe,eAGpCpB,GAAkBE,EAsBhB,KArBF,yBACEM,MAAO,CACLC,QAAS,OACTE,eAAgB,WAChBE,SAAU,WAGXhB,EAAkB,KACjB,0BACEW,MAAO,CACLM,YAAa,MACbC,MAAOC,YAAcX,EAAQY,gBAG9BZ,EAAQgB,gBAAkBxB,EAA1B,WACOqB,YAAeb,EAAQgB,iBAC3B,MAGR,8BAAOF,YAAmBd,EAAQiB,kBAIxC,kBAAC5B,EAAD,CAAYG,gBAAiBA,GAC3B,kBAACC,EAAD,CACEC,eAAgBA,EAChBC,cAAeA,EACfH,gBAAiBA,KAGrB,kBAACI,EAAD,CACEC,aAAcA,EACdqB,QAAS,WACPnB,EAAIoB,MAAM,CAAEC,OAAQpB,EAAQqB,YAAaC,WAAW,MAGrDtB,EAAQuB,e,o5DC5IjB,IAAMC,EAAyBC,YAAH,KAStBC,EAAmBpC,IAAOC,IAAV,IAEFiC,GAOdG,EAAyBrC,IAAOC,IAAV,KAGjB,qBAAGqC,cACC,qBAAGC,kBACL,kBACM,MADN,EAAGD,WACS,sBAAwB,MAY3CE,EAAcxC,IAAOyC,KAAV,KAaXC,EAAY1C,IAAOyC,KAAV,KA4BTE,EAAW3C,IAAOC,IAAV,KAsBR2C,EAAY,SAACC,GACjB,OAAQA,EAAKpB,cAAgBoB,EAAKlB,eAG9BmB,EAAW,SAACD,EAAME,GAEtB,IAAMC,EAAgBH,EAAKlB,eAAiBkB,EAAKpB,aAAe,EAC1DwB,EAAiBJ,EAAKnB,gBAAkBmB,EAAKvB,cAAgB,EACnE,OAAQsB,EAAUC,IAASG,EAAgBC,GAAkBF,GA2EhDG,EAxEO,SAAC,GAAwD,IAEzEZ,EAFmB7B,EAAqD,EAArDA,IAAK0C,EAAgD,EAAhDA,QAASC,EAAuC,EAAvCA,aAAcC,EAAyB,EAAzBA,mBAAyB,EAC1CC,oBAAkB,GADwB,mBACrEC,EADqE,KAC1DC,EAD0D,KAM1ElB,EAHGa,EAEMI,EACI,OAEA,QAJA,IAkBf,OACE,kBAAClB,EAAD,CAAwBC,WAAYA,GAClB,MAAfA,EACC,kBAACK,EAAD,CACEc,UAAWF,EAAY,gBAAkB,cACzC3B,QAAS,kBAAM4B,GAAa,SAACE,GAAD,OAAgBA,QAE5C,KACY,UAAfpB,EACC,kBAACF,EAAD,KACE,kBAACM,EAAD,CAAWd,QAtBQ,WACzByB,EAAmB,MACnBD,EAAaO,kBAAoB,KAC7BP,EAAa3C,IAAImD,UAAU,gBAC7BR,EAAa3C,IAAIoD,YAAY,cAC7BT,EAAa3C,IAAIqD,aAAa,eAE5BV,EAAa3C,IAAImD,UAAU,iBAC7BR,EAAa3C,IAAIoD,YAAY,eAC7BT,EAAa3C,IAAIqD,aAAa,mBAc1B,yBAAKjD,MAAO,CAAEC,QAAS,SACrB,kBAAC0B,EAAD,CACE3B,MAAO,CACLkD,iBAAwB,OAAPZ,QAAO,IAAPA,OAAA,EAAAA,EAASY,iBAAT,OACbZ,QADa,IACbA,OADa,EACbA,EAASY,gBACT,QACJ3C,OAAc,OAAP+B,QAAO,IAAPA,OAAA,EAAAA,EAAS/B,OAAT,OAAiB+B,QAAjB,IAAiBA,OAAjB,EAAiBA,EAAS/B,MAAQ,UAG1C+B,EAAQa,WAEX,6BACE,yBAAKnD,MAAO,CAAEoD,WAAY,SAAWd,EAAQe,UAC7C,yBAAKrD,MAAO,CAAEsD,SAAU,SACtB,6BAAMhB,EAAQa,WACd,6BAAMI,IAAajB,EAAQkB,cAC3B,0CAAgBlB,EAAQmB,aAK9B,yBAAKzD,MAAO,CAAE0D,UAAW,SACtBpB,EAAQqB,SAAS/D,KAAI,SAACC,EAAS+D,GAAV,OACpB,kBAAC,EAAD,CACEhE,IAAKA,EACLiE,IAAKhE,EAAQiE,UACbjE,QAASA,EACTR,gBAAiB4C,EAASpC,EAAS0C,EAAawB,UAChDrE,aAAcqC,EAAUlC,GACxBN,eAA0B,IAAVqE,EAChBpE,cAAeoE,IAAUtB,EAAQqB,SAASK,OAAS,SAKzD,OCgDKC,G,OA5NH,WAAO,IAAD,EACwBxB,mBAAc,MADtC,mBACTF,EADS,KACK2B,EADL,OAEMzB,mBAAc,MAFpB,mBAET7C,EAFS,KAEJuE,EAFI,OAG+B1B,mBAAc,MAH7C,mBAGT2B,EAHS,KAGQC,EAHR,KAIVC,EAAqBC,iBAAOH,GAC5B5B,EAAqB,SAACgC,GAC1BF,EAAmBG,QAAUD,EAC7BH,EAAoBG,IA0JtB,OAvJAE,qBAAU,WACR,IAAIC,GACa,uCAAG,sBAAAC,EAAA,sEACZC,MAAM,wCACTC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACC,GACLJ,EAAeI,EAAIlB,OAJL,2CAAH,qDAOjBoB,GAAcH,MAAK,WACjB,IAAMI,EAAY,IAAIC,MAAI,CACxBC,UAAW,MACXpF,MAAM,sDAAD,OAAwD2E,GAC7D1D,OAAQ,CAAC,GAAI,OAEboE,KAAM,IAERH,EAAUI,WACR,IAAIC,oBAAkB,CACpBC,aAAa,IAEf,gBAEFN,EAAUO,WAAWC,UACrBR,EAAUS,gBAAgBC,kBAC1B,IAAMC,EAAU,IAAIC,IAAc,CAChCC,IAAK,kCACLC,OAAQrB,IAGVkB,EAAQI,oBAAsB,WAC5BJ,EAAQK,IACLC,oBACCN,EAAQO,UAAU,CAChBC,GAAIR,EAAQS,UACZpE,KAAMqE,YAAiBV,EAAQ9B,aAGlCe,MAAK,SAAC0B,GAAU,IACJC,EAAkCD,EAArCE,EAAiBC,EAAoBH,EAAvBI,EAChB1F,EAAmB,GACzBuF,EAAUI,SAAQ,SAACC,GACjBA,EAAKD,SAAQ,SAACE,GACZ7F,EAAY8F,KACVC,YAAgB,CAACF,EAAMG,EAAGH,EAAMI,GAAI,YAAa,oBAInDtB,EAAQjG,IAAImD,UAAU,gBACxB8C,EAAQjG,IAAIoD,YAAY,cACxB6C,EAAQjG,IAAIqD,aAAa,eAEvB4C,EAAQjG,IAAImD,UAAU,iBACxB8C,EAAQjG,IAAIoD,YAAY,eACxB6C,EAAQjG,IAAIqD,aAAa,gBAE3B,IAAMmE,EAAiBvB,EAAQuB,eAAexH,KAAI,SAACC,GAAD,OAChDoH,YACE,CAACpH,EAAQ,GAAIA,EAAQ,IACrB,YACA,gBAGAuH,IACFvB,EAAQjG,IAAIyH,UAAU,cAAe,CACnCC,KAAM,UACNC,KAAM,CACJD,KAAM,UACNE,WAAY,GACZC,SAAU,CACRH,KAAM,aACNpG,YAAakG,MAInBvB,EAAQjG,IAAI8H,SACV,CACErB,GAAI,cACJiB,KAAM,SACNK,OAAQ,cACRC,MAAO,CACL,gBAAiB,EAGjB,eAAgBjB,EACZ,IAAMA,EACN,SAGRd,EAAQhC,MAGR3C,IACF2E,EAAQjG,IAAIyH,UAAU,aAAc,CAClCC,KAAM,UACNC,KAAM,CACJD,KAAM,UACNE,WAAY,GACZC,SAAU,CACRH,KAAM,aACNpG,kBAIN2E,EAAQjG,IAAI8H,SACV,CACErB,GAAI,aACJiB,KAAM,OACNK,OAAQ,aACRE,OAAQ,CACN,YAAa,QACb,WAAY,SAEdD,MAAO,CACL,aAAcjB,EACV,IAAMA,EACN,OACJ,aAAc,IAGlB,mBAILmB,OAAM,gBAEXjC,EAAQ9E,SAAQ,SAACuB,GAAa,IAAD,EACtBA,GAUwB,OAAlBgC,QAAkB,IAAlBA,GAAA,UAAAA,EAAoBG,eAApB,eAA6B4B,OAA7B,OAAoC/D,QAApC,IAAoCA,OAApC,EAAoCA,EAAS+D,MACtD7D,EAAmBF,GACnBuD,EAAQI,wBAXRzD,EAAmB,MACfqD,EAAQjG,IAAImD,UAAU,gBACxB8C,EAAQjG,IAAIoD,YAAY,cACxB6C,EAAQjG,IAAIqD,aAAa,eAEvB4C,EAAQjG,IAAImD,UAAU,iBACxB8C,EAAQjG,IAAIoD,YAAY,eACxB6C,EAAQjG,IAAIqD,aAAa,oBAO/BiB,EAAgB2B,GAEhBX,EAAU6C,GAAG,OAAb,sBAAqB,sBAAAnD,EAAA,sDACnBiB,EAAQmC,KAAK9C,GADM,4CAGrBf,EAAOe,QAER,IAGD,6BACE,yBACElF,MAAO,CACLC,QAAS,OACTgI,OAAQ,QACR7H,MAAO,QACP8H,SAAU,aAGZ,kBAAC,EAAD,CACEtI,IAAKA,EACL2C,aAAcA,EACdD,QAAS8B,EACT5B,mBAAoBA,IAEtB,yBAAK6D,GAAG,MAAMrG,MAAO,CAAEmI,KAAM,GAAKC,SAAU,KAE9C,yBACEpI,MAAO,CACLkI,SAAU,WACVG,IAAK,OACLC,MAAO,OACPrI,QAAS,QACTG,MAAO,QACPmI,OAAQ,MAGV,uBACEC,KAAK,mCACLC,OAAO,SACPC,IAAI,uBAEJ,yBACE1I,MAAO,CACLiI,OAAQ,QAEVU,IAAI,qBACJC,IAAI,MAGR,uBACEJ,KAAK,6BACLC,OAAO,SACPC,IAAI,uBAEJ,yBACE1I,MAAO,CACLiI,OAAQ,QAEVU,IAAI,qBACJC,IAAI,U,+QC1NhB,IACMC,EAAW,yDACXC,EAAM,OAGNC,EAAe5J,IAAO6J,OAAV,KACI,qBAAGC,WACR,kBAAoB,qBAS/BC,EAAU,CACd,qBACA,sBACA,qBACA,QACA,QACA,OACA,mCACA,oBACA,wBAsOaC,EAnOO,WAAO,IAAD,EACkB1G,mBAAc,MADhC,mBACnB2G,EADmB,KACHC,EADG,OAEM5G,mBAAc,MAFpB,mBAEnB6G,EAFmB,KAETC,EAFS,OAG0B9G,mBAAc,MAHxC,mBAGnB+G,EAHmB,KAGCC,EAHD,OAIYhH,mBAAc,MAJ1B,mBAINiH,GAJM,WAMpBC,EAAe,SAACpC,GACpB,IAAIqC,EAEFA,EADErC,EAAKA,KAAKsC,KACAC,KAAKC,UAAUxC,EAAKA,KAAKsC,KAAM,KAAM,QAErCC,KAAKC,UAAUxC,EAAKA,KAAKyC,MAAO,KAAM,QAEpD,IAAMjF,EACJ,oCACE,yBACE/E,MAAO,CAAE0D,UAAW,OACpBuG,wBAAyB,CAAEC,OAAQN,MAInCO,EAAa5C,EAAKA,KAAK4C,WACvBC,EACJ,kBAAC,IAAD,KACE,kBAAC,IAAD,KACGC,OAAOC,KAAKH,GAAYvK,KAAI,SAACiE,GAAD,OAC3B,kBAAC,IAAD,CAAKA,IAAKA,GACPA,EACD,0BACE7D,MAAO,CACLC,QAAS,eACTiD,gBAAiBiH,EAAWtG,GAAKG,OAAS,QAAU,OACpD5D,MAAO,OACP6H,OAAQ,OACRsC,aAAc,MACdC,WAAY,cAMrBH,OAAOC,KAAKH,GAAYvK,KAAI,SAACiE,GAAD,OAC3B,kBAAC,IAAD,CAAUA,IAAKA,GACb,yBACE7D,MAAO,CAAE0D,UAAW,OACpBuG,wBAAyB,CACvBC,OAAQJ,KAAKC,UAAUI,EAAWtG,GAAM,KAAM,gBAO1D0F,EAAYxE,GACZ0E,EAAsBW,IAElBK,EAAuB,WAC3Bf,EAAe,MACfH,EAAY,MACZE,EAAsB,OAElBiB,EAAc,WAClBrB,EAAkB,SAClBoB,IACA5F,MAAM,GAAD,OA5FS,IA4FT,OAAgBgE,EAAhB,0BAzFM,QAyFN,gBAAwDC,IAC1DhE,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACyC,GACLoD,QAAQC,IAAI,QAASrD,GACrBoC,EAAapC,OAIbsD,EAAc,WAClBxB,EAAkB,SAClBoB,IACA5F,MAAM,GAAD,OAvGS,IAuGT,OAAgBgE,EAAhB,2BApGM,QAoGN,gBAAyDC,IAC3DhE,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACyC,GACLoD,QAAQC,IAAI,QAASrD,GACrBoD,QAAQC,IACN,iBACAE,IACGC,OAAOxD,EAAKA,KAAKyC,MAAMgB,QACvBpL,KAAI,SAACmH,GAAD,OAAWA,EAAMkE,cAE1BtB,EAAapC,OAIb2D,EAAa,WACjB7B,EAAkB,QAClBoB,IACA5F,MAAM,GAAD,OAxHS,IAwHT,OAAgBgE,EAAhB,uBArHM,QAqHN,gBAAqDC,IACvDhE,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACyC,GACLoD,QAAQC,IAAI,OAAQrD,GACpBoC,EAAapC,OAIb4D,EAAwB,WAC5B9B,EAAkB,qBAClBoB,IACA5F,MAAM,GAAD,OAnIS,IAmIT,OACYgE,EADZ,oCAhIM,QAgIN,gBAC8DC,IAEhEhE,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACyC,GACLoD,QAAQC,IAAI,oBAAqBrD,GACjCoC,EAAapC,OAIb6D,EAA2B,WAC/B/B,EAAkB,wBAClBoB,IACA5F,MAAM,GAAD,OAhJS,IAgJT,OAAgBgE,EAAhB,iCA7IM,QA6IN,gBAA+DC,IACjEhE,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACyC,GACLoD,QAAQC,IAAI,uBAAwBrD,GACpCoC,EAAapC,OAIb8D,EAA0B,WAC9BhC,EAAkB,uBAClBoB,IACA5F,MAAM,GAAD,OA3JS,IA2JT,OACYgE,EADZ,8BAxJM,QAwJN,gBACwDC,EADxD,6CAGFhE,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACyC,GACLoD,QAAQC,IAAI,sBAAuBrD,GACnCoC,EAAapC,OAGb+D,EAAyB,WAC7BjC,EAAkB,sBAClBoB,IAOAf,EALE,4BACE,qCAAW,KAAX,+BACA,qCAAW,KAAX,iCAIJ7E,MAAM,GAAD,OA9KS,IA8KT,OACYgE,EADZ,6BA3KM,QA2KN,gBACuDC,EADvD,sFAGFhE,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACyC,GACLoD,QAAQC,IAAI,qBAAsBrD,GAClCoC,EAAapC,OAGbgE,EAAyB,WAC7BlC,EAAkB,sBAClBoB,IACA5F,MAAM,GAAD,OA1LS,IA0LT,OACYgE,EADZ,6BAvLM,QAuLN,gBACuDC,EADvD,kEAGFhE,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACyC,GACLoD,QAAQC,IAAI,qBAAsBrD,GAClCoC,EAAapC,OAGbiE,EAAqC,WACzCnC,EAAkB,oCAClBoB,IACA5F,MAAM,GAAD,OAtMS,IAsMT,OACYgE,EADZ,mDAnMM,QAmMN,gBAC6EC,IAE/EhE,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACyC,GACLoD,QAAQC,IAAI,mCAAoCrD,GAChDoC,EAAapC,OAGbkE,EAAe,SAACC,GACpB,OAAQA,GACN,IAAK,qBACH,OAAOJ,EACT,IAAK,sBACH,OAAOD,EACT,IAAK,qBACH,OAAOE,EACT,IAAK,OACH,OAAOL,EACT,IAAK,QACH,OAAOR,EACT,IAAK,QACH,OAAOG,EACT,IAAK,mCACH,OAAOW,EACT,IAAK,oBACH,OAAOL,EACT,IAAK,uBACH,OAAOC,IAGb,OACE,yBAAKpL,MAAO,CAAED,QAAS,aACpBmJ,EAAQtJ,KAAI,SAAC8L,GAAD,OACX,kBAAC3C,EAAD,CACElF,IAAK6H,EACLzC,WAAYG,IAAmBsC,EAC/B3K,QAAS0K,EAAaC,IAErBA,MAKL,yBAAK1L,MAAO,CAAEC,QAAS,SACrB,yBAAKD,MAAO,CAAEI,MAAO,QACnB,6CACCkJ,GAEH,yBAAKtJ,MAAO,CAAEI,MAAO,QACnB,8CADF,IAC+BoJ,M,oDCxPjCV,GAAM6C,OAAOC,aAAa5F,OAC1B6F,GAASF,OAAOC,aAAaE,kBAC7BjD,GAAW8C,OAAOC,aAAaG,OAExBC,GAAb,8MAEIC,kBAAqB,SAACC,GAAkC,IAA1BC,EAAyB,uDAAP,GACpCC,EAA6BF,EAA7BE,KAAMC,EAAuBH,EAAvBG,MAAOC,EAAgBJ,EAAhBI,MAAOC,EAASL,EAATK,KACtBC,EACJJ,EAAKK,MAAM,EAAG,GAAK,IAAML,EAAKK,MAAM,EAAG,GAAK,IAAML,EAAKK,MAAM,EAAG,GAC5DC,EAAYC,KAAKC,MAAMJ,EAAgB,IAAMH,EAAQ,KACrDQ,EAAUF,KAAKC,MAAMJ,EAAgB,IAAMF,EAAQ,KACnDQ,EAAaP,EAAKQ,MAAM,KACxBC,EAAc,CAACF,EAAW,GAAIA,EAAW,IACzCG,EAAe,CAACH,EAAW,GAAIA,EAAW,IAC1CI,EAAwBjG,YAC5B,CAAC+F,EAAY,GAAIA,EAAY,IAC7B,YACA,aAEIG,EAAyBlG,YAC7B,CAACgG,EAAa,GAAIA,EAAa,IAC/B,YACA,aAEIG,EAAUF,EAAsB,GAChCG,EAAUH,EAAsB,GAChCI,EAAQH,EAAuB,GAC/BI,EAAQJ,EAAuB,GACrC,OAAOtI,MAAM,GAAD,OACPgE,GADO,uBACgBgD,GADhB,gBAC8B/C,GAD9B,sBAC+C4D,EAD/C,oBACoEG,EADpE,oBACuFO,EADvF,oBAC0GC,EAD1G,kBAC2HC,EAD3H,kBAC0IC,GACpJ,CACEC,OAAQrB,EAAgBqB,SAGzB1I,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAAC2I,GACL,IAAMC,EAAeD,EAAElG,KAiBvB,OAhBAmG,EAAa7G,SACX,SAAC8G,GACCA,EAAWlG,SAAW,IAAImG,KACxBD,EAAWlG,SAAS7H,KAAI,SAACmH,GAAD,OACtBE,YACE,CAACF,EAAM,GAAIA,EAAM,IACjB,YACA,iBAIN4G,EAAWrG,KAAO,KAKfoG,KAER5F,OAAM,SAAC+F,GACNlD,QAAQC,IAAIiD,OArDxB,sEAyD4B3B,GAA8B,IAAtBC,EAAqB,uDAAH,GAC9C,OAAOtH,MAAM,GAAD,OACPgE,GADO,wBACiBqD,EAAO7F,IADxB,OAC6BwF,GAD7B,gBAC2C/C,GAD3C,4CAEV,CACE0E,OAAQrB,EAAgBqB,SAGzB1I,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAAC2I,GAAO,IAAD,EAKPA,EAAElG,KAAKyC,MAHT8D,EAFS,EAETA,OACYC,EAHH,EAGTC,SAAYD,UACZE,EAJS,EAITA,YAJS,EAMgCR,EAAElG,KAAK4C,WAA1C+D,EANG,EAMHA,SAAUC,EANP,EAMOA,MAAOC,EANd,EAMcA,OAAQC,EANtB,EAMsBA,MAC3BC,EAAOH,EAAMI,MAAK,gBAAGlI,EAAH,EAAGA,GAAH,OAAYyH,GAAUzH,KACtCmI,EAA0BF,EAA1BE,QAASC,EAAiBH,EAAjBG,aACXC,EAAQN,EAAOG,MAAK,gBAAGlI,EAAH,EAAGA,GAAH,OAAYmI,GAAWnI,KACzCsI,EAAqCD,EAArCC,SAAUpO,EAA2BmO,EAA3BnO,MAAOqO,EAAoBF,EAApBE,UAAWtH,EAASoH,EAATpH,KAC9BuH,EAASX,EAASK,MAAK,gBAAGlI,EAAH,EAAGA,GAAH,OAAYsI,GAAYtI,KAC7CN,EAAwB8I,EAAxB9I,IAAK+I,EAAmBD,EAAnBC,SAAUC,EAASF,EAATE,KACjBpL,EAAW,GA2CjB,OA1CAoK,EAAUlH,SAAQ,SAACmI,GAAc,IACvBpO,EAAuCoO,EAAvCpO,YAAaE,EAA0BkO,EAA1BlO,cAAemO,EAAWD,EAAXC,OAC9BjN,EAAOqM,EAAME,MAAK,qBAAGlI,IAAe4I,KAClCC,EAAiDlN,EAAjDkN,IAAKC,EAA4CnN,EAA5CmN,IAAWC,EAAiCpN,EAAvC+M,KAAgBM,EAAuBrN,EAAvBqN,mBAClC1L,EAASqD,KAAK,CACZvG,kBAAc6O,EACd1O,YAAaqN,EAA4B,IAAdrN,EAC3B2O,WAAW,EACXrO,YAAa,CAACiO,EAAKD,GACnBrO,oBAAgByO,EAChBxO,cAAemN,EAA8B,IAAhBnN,EAC7B0O,WAAW,EACXC,UAAU,EACV3L,UAAWmL,EACX7N,YAAagO,EACbM,qBAAsBL,OAGd,CACVM,iBAAiB,EACjBzM,gBAAiB3C,EACjBA,MAAOqO,EACPgB,YAAanB,EACboB,QAAS,IACTxJ,GAAIyH,EACJzK,SAAUoL,EACVqB,sBAAuB,GAKvBrM,SAAUsL,EACVgB,iBAAkBjB,EAClBkB,YAAajK,EACbkK,SAAU,EACVC,gBAAiB1B,EACjBrL,UAAWuL,EAAMvL,UACjBQ,SAAUA,EACVH,YAAa8D,EACboI,sBAAsB,MAKzB5H,OAAM,SAACqI,GACNxF,QAAQC,IAAIuF,GACZxF,QAAQC,IAAR,UACK/B,GADL,wBAC6BqD,EAAO7F,IADpC,OACyCwF,GADzC,gBACuD/C,GADvD,oDA7HZ,GAAmCsH,MCD7BtH,GAAO6C,OAAeC,aAAa5F,OACnC6F,GAAUF,OAAeC,aAAaE,kBACtCjD,GAAY8C,OAAeC,aAAaG,OACxCsE,GAAY1E,OAAeC,aAAa0E,SA6M/BC,GA3MA,WAAO,IAAD,EACqB9N,mBAAc,MADnC,mBACZF,EADY,KACE2B,EADF,OAEGzB,mBAAc,MAFjB,mBAEZ7C,EAFY,KAEPuE,EAFO,OAG4B1B,mBAAc,MAH1C,mBAGZ2B,EAHY,KAGKC,EAHL,KAIbC,EAAqBC,iBAAOH,GAC5B5B,EAAqB,SAACgC,GAC1BF,EAAmBG,QAAUD,EAC7BH,EAAoBG,IA8ItB,OA5IAE,qBAAU,WAWR,IAAMQ,EAAY,IAAIC,MAAI,CACxBC,UAAW,MACXpF,MAAM,4EACNiB,OAAQ,CAAC,GAAI,IACboE,KAAM,IAERH,EAAUI,WACR,IAAIC,oBAAkB,CACpBC,aAAa,IAEf,gBAEFN,EAAUO,WAAWC,UACrBR,EAAUS,gBAAgBC,kBAC1B,IAAMC,EAAU,IAAIC,IAAc,CAChCI,IAAK,IAAI8F,KAGXnG,EAAQ2K,uBAAyBH,GACjCxK,EAAQI,oBAAsB,SAAC3D,GACzBA,GACFuC,MAAM,GAAD,OAAIgE,GAAJ,sBAA0BhD,EAAQS,WAAlC,OAA8CuF,GAA9C,gBAA4D/C,KAC9DhE,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAAC2I,GACL,IAAMvM,EAAmBuM,EAAElG,KACvB1B,EAAQjG,IAAImD,UAAU,gBACxB8C,EAAQjG,IAAIoD,YAAY,cACxB6C,EAAQjG,IAAIqD,aAAa,eAEvB4C,EAAQjG,IAAImD,UAAU,iBACxB8C,EAAQjG,IAAIoD,YAAY,eACxB6C,EAAQjG,IAAIqD,aAAa,gBAE3B,IAAMmE,EAAiBvB,EAAQuB,eAAexH,KAAI,SAACC,GAAD,OAChDoH,YACE,CAACpH,EAAQ,GAAIA,EAAQ,IACrB,YACA,gBAGAuH,IACFvB,EAAQjG,IAAIyH,UAAU,cAAe,CACnCC,KAAM,UACNC,KAAM,CACJD,KAAM,UACNE,WAAY,GACZC,SAAU,CACRH,KAAM,aACNpG,YAAakG,MAInBvB,EAAQjG,IAAI8H,SACV,CACErB,GAAI,cACJiB,KAAM,SACNK,OAAQ,cACRC,MAAO,CACL,gBAAiB,EAGjB,eAAgBtF,EAAQ/B,MACpB,IAAM+B,EAAQ/B,MACd,SAGRsF,EAAQhC,MAGR3C,IACF2E,EAAQjG,IAAIyH,UAAU,aAAc,CAClCC,KAAM,UACNC,KAAM,CACJD,KAAM,UACNE,WAAY,GACZC,SAAU,CACRH,KAAM,aACNpG,kBAIN2E,EAAQjG,IAAI8H,SACV,CACErB,GAAI,aACJiB,KAAM,OACNK,OAAQ,aACRE,OAAQ,CACN,YAAa,QACb,WAAY,SAEdD,MAAO,CACL,aAActF,EAAQ/B,MAAQ,IAAM+B,EAAQ/B,MAAQ,OACpD,aAAc,IAGlB,mBAILuH,OAAM,SAAC+F,GAAD,OAAOlD,QAAQC,IAAIiD,OAIhChI,EAAQ9E,SAAQ,SAACuB,GAAa,IAAD,EACtBA,GAUwB,OAAlBgC,QAAkB,IAAlBA,GAAA,UAAAA,EAAoBG,eAApB,eAA6B4B,OAA7B,OAAoC/D,QAApC,IAAoCA,OAApC,EAAoCA,EAAS+D,MACtD7D,EAAmBF,GACnBuD,EAAQI,oBAAoB3D,KAX5BE,EAAmB,MACfqD,EAAQjG,IAAImD,UAAU,gBACxB8C,EAAQjG,IAAIoD,YAAY,cACxB6C,EAAQjG,IAAIqD,aAAa,eAEvB4C,EAAQjG,IAAImD,UAAU,iBACxB8C,EAAQjG,IAAIoD,YAAY,eACxB6C,EAAQjG,IAAIqD,aAAa,oBAQ/BiC,EAAUO,WAAWC,UACrBR,EAAUS,gBAAgBC,kBAC1B1B,EAAgB2B,GAChBX,EAAU6C,GAAG,QAAQ,WACnBlC,EAAQmC,KAAK9C,MAEff,EAAOe,KAEN,IAED,6BACE,yBACElF,MAAO,CACLC,QAAS,OACTgI,OAAQ,QACR7H,MAAO,QACP8H,SAAU,aAEZ,kBAAC,EAAD,CACEtI,IAAKA,EACL2C,aAAcA,EACdD,QAAS8B,EACT5B,mBAAoBA,IACtB,yBAAK6D,GAAG,MAAMrG,MAAO,CAAEmI,KAAM,GAAKC,SAAU,KAE9C,yBACEpI,MAAO,CACLkI,SAAU,WACVG,IAAK,OACLC,MAAO,OACPrI,QAAS,QACTG,MAAO,QACPmI,OAAQ,MAEV,uBACEC,KAAK,mCACLC,OAAO,SACPC,IAAI,uBACJ,yBACE1I,MAAO,CACLiI,OAAQ,QAEVU,IAAI,qBACJC,IAAI,MAGR,uBACEJ,KAAK,6BACLC,OAAO,SACPC,IAAI,uBACJ,yBACE1I,MAAO,CACLiI,OAAQ,QAEVU,IAAI,qBACJC,IAAI,S,6BCvMVyH,GAAY1E,OAAeC,aAAa0E,SAsG/BG,GArGA,WAAO,IAAD,EACqBhO,mBAAc,MADnC,mBACZF,EADY,aAEGE,mBAAc,OAFjB,mBAEZ7C,EAFY,KAEPuE,EAFO,OAG4B1B,mBAAc,MAH1C,mBAGZ2B,EAHY,KAGKC,EAHL,KAIbC,EAAqBC,iBAAOH,GAsClC,OAjCAM,qBAAU,WACR,IAAIC,GACa,uCAAG,sBAAAC,EAAA,sEACZC,MAAM,wCACTC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACC,GACLJ,EAAeI,EAAIlB,OAJL,2CAAH,qDAQjBoB,GAAcH,MAAK,WACjB,IAAM4L,EAAQ,IAAIvL,KAAI,CACpBsD,OAAQ,MACRkI,KAAM,IAAIC,KAAK,CACb3P,OAAQgG,YAAgB,CAAC,GAAI,OAAQ,YAAa,aAClD5B,KAAM,OAIJQ,EAAU,IAAIC,KAAc,CAChCI,IAAK,IAAI8F,KAGXnG,EAAQ2K,uBAAyBH,GAEjC,IAAMQ,EAAQ,IAAIC,KAAY,CAC5B/K,IAAI,sDAAD,OAAwDpB,KAE7D+L,EAAMhJ,SAASmJ,GACfH,EAAMhJ,SAAS7B,GACf1B,EAAOuM,QAER,IAED,6BACE,yBACE1Q,MAAO,CACLC,QAAS,OACTgI,OAAQ,QACR7H,MAAO,QACP8H,SAAU,aAGZ,kBAAC,EAAD,CACEtI,IAAKA,EACL2C,aAAcA,EACdD,QAAS8B,EACT5B,mBAnDmB,SAACgC,GAC1BF,EAAmBG,QAAUD,EAC7BH,EAAoBG,MAmDhB,yBAAK6B,GAAG,MAAMrG,MAAO,CAAEmI,KAAM,GAAKC,SAAU,KAE9C,yBACEpI,MAAO,CACLkI,SAAU,WACVG,IAAK,OACLC,MAAO,OACPrI,QAAS,QACTG,MAAO,QACPmI,OAAQ,MAGV,uBACEC,KAAK,mCACLC,OAAO,SACPC,IAAI,uBAEJ,yBACE1I,MAAO,CACLiI,OAAQ,QAEVU,IAAI,qBACJC,IAAI,MAGR,uBACEJ,KAAK,6BACLC,OAAO,SACPC,IAAI,uBAEJ,yBACE1I,MAAO,CACLiI,OAAQ,QAEVU,IAAI,qBACJC,IAAI,SCtFDmI,GAXF,kBACX,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWX,KACjC,kBAAC,IAAD,CAAOS,OAAK,EAACC,KAAK,MAAMC,UAAWT,KACnC,kBAAC,IAAD,CAAOO,OAAK,EAACC,KAAK,QAAQC,UAAW/H,IACrC,kBAAC,IAAD,CAAO6H,OAAK,EAACC,KAAK,OAAOC,UAAWjN,OCAtBkN,QACW,cAA7BxF,OAAOyF,SAASC,UAEe,UAA7B1F,OAAOyF,SAASC,UAEhB1F,OAAOyF,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDiIpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBhN,MAAK,SAAAiN,GACJA,EAAaC,gBAEdlK,OAAM,SAAAmK,GACLtH,QAAQsH,MAAMA,EAAMC,c","file":"static/js/main.b1945d0b.chunk.js","sourcesContent":["import {\r\n  getDelayString,\r\n  getHoursAndMinutes,\r\n} from 'mobility-toolbox-js/common/timeUtils';\r\nimport { getDelayColor } from 'mobility-toolbox-js/common/trackerConfig';\r\n\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst RouteShape = styled.div`\r\n  width: 4px;\r\n  background-color: ${({ isStationPassed }) =>\r\n    isStationPassed ? 'white' : 'grey'};\r\n  align-self: stretch;\r\n  padding: 0;\r\n  margin: 0 5px 0 10px;\r\n  position: relative;\r\n`;\r\n\r\nconst RoutePoint = styled.div`\r\n  background-color: ${({ isStationPassed }) =>\r\n    isStationPassed ? '#fff' : 'grey'};\r\n  height: 12px;\r\n  border-radius: 50%;\r\n  -moz-border-radius: 50%;\r\n  -webkit-border-radius: 50%;\r\n  width: 12px;\r\n  position: absolute;\r\n  left: 50%;\r\n  top: ${({ isFirstStation, isLastStation }) => {\r\n    if (isFirstStation) {\r\n      return '0';\r\n    }\r\n    if (isLastStation) {\r\n      return '100%';\r\n    }\r\n    return '50%';\r\n  }};\r\n  transform: ${({ isFirstStation }) =>\r\n    isFirstStation ? 'translate(-50%,0)' : 'translate(-50%, -50%)'};\r\n`;\r\n\r\nconst StationLabel = styled.div`\r\n  cursor: pointer;\r\n  flex: 1;\r\n  padding: 0 5px;\r\n  border-radius: 2px;\r\n  color: ${({ isNotStation }) => (isNotStation ? 'grey' : 'white')};\r\n  :hover {\r\n    background-color: rgba(0, 0, 0, 0.3);\r\n  }\r\n`;\r\n\r\nconst StationInfo = ({\r\n  map,\r\n  station,\r\n  isStationPassed,\r\n  isNotStation,\r\n  isFirstStation,\r\n  isLastStation,\r\n}) => {\r\n  let alignment = 'center',\r\n    padding = '5px 0';\r\n  if (isFirstStation) {\r\n    alignment = 'flex-start';\r\n    padding = '0 0 5px 0';\r\n  } else if (isLastStation) {\r\n    alignment = 'flex-end';\r\n    padding = '5px 0 0 0';\r\n  }\r\n  return (\r\n    <div\r\n      style={{\r\n        display: 'flex',\r\n        alignItems: alignment,\r\n        justifyContent: 'flex-start',\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          width: '60px',\r\n          padding: padding,\r\n        }}\r\n      >\r\n        {!isFirstStation && !isNotStation ? (\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              justifyContent: 'flex-end',\r\n              flexWrap: 'nowrap',\r\n            }}\r\n          >\r\n            {isStationPassed ? null : (\r\n              <span\r\n                style={{\r\n                  marginRight: '5px',\r\n                  color: getDelayColor(station.arrivalDelay),\r\n                }}\r\n              >\r\n                {station.arrivalDelay\r\n                  ? `+${getDelayString(station.arrivalDelay)}`\r\n                  : '+0'}\r\n              </span>\r\n            )}\r\n\r\n            <span>{getHoursAndMinutes(station.arrivalTime)}</span>\r\n          </div>\r\n        ) : null}\r\n        {!isLastStation && !isNotStation ? (\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              justifyContent: 'flex-end',\r\n              flexWrap: 'nowrap',\r\n            }}\r\n          >\r\n            {isStationPassed ? null : (\r\n              <span\r\n                style={{\r\n                  marginRight: '5px',\r\n                  color: getDelayColor(station.arrivalDelay),\r\n                }}\r\n              >\r\n                {station.departureDelay && isStationPassed\r\n                  ? `+${getDelayString(station.departureDelay)}`\r\n                  : '+0'}\r\n              </span>\r\n            )}\r\n            <span>{getHoursAndMinutes(station.departureTime)}</span>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n      <RouteShape isStationPassed={isStationPassed}>\r\n        <RoutePoint\r\n          isFirstStation={isFirstStation}\r\n          isLastStation={isLastStation}\r\n          isStationPassed={isStationPassed}\r\n        />\r\n      </RouteShape>\r\n      <StationLabel\r\n        isNotStation={isNotStation}\r\n        onClick={() => {\r\n          map.flyTo({ center: station.coordinates, essential: true });\r\n        }}\r\n      >\r\n        {station.stationName}\r\n      </StationLabel>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StationInfo;\r\n","import React, { useState } from 'react';\r\nimport StationInfo from './StationInfo';\r\nimport styled, { keyframes } from 'styled-components';\r\nimport { types as vehicleTypes } from 'mobility-toolbox-js/common/trackerConfig';\r\n\r\nconst ContentFadeInAnimation = keyframes`\r\nfrom{\r\n  opacity: 0;\r\n}\r\nto{\r\n  opacity: 1;\r\n}\r\n`;\r\n\r\nconst ContentContainer = styled.div`\r\n  opacity: 0;\r\n  animation-name: ${ContentFadeInAnimation};\r\n  animation-timing-function: ease;\r\n  animation-fill-mode: forwards;\r\n  animation-delay: 0.2s;\r\n  animation-duration: 1s;\r\n`;\r\n\r\nconst RouteScheduleContainer = styled.div`\r\n  position: absolute;\r\n  height: 100%;\r\n  width: ${({ modalWidth }) => modalWidth};\r\n  transform: ${({ translateStyle }) => translateStyle};\r\n  padding: ${({ modalWidth }) =>\r\n    modalWidth !== '0' ? '30px 20px 20px 20px' : ''};\r\n  overflow: auto;\r\n  overflow-x: hidden;\r\n  top: auto;\r\n  right: auto;\r\n  left: 0;\r\n  background-color: rgba(0, 0, 0, 0.6);\r\n  z-index: 1000;\r\n  color: white;\r\n  transition: width 0.2s ease-in-out;\r\n`;\r\n\r\nconst VehicleIcon = styled.span`\r\n  border-radius: 50%;\r\n  width: 40px;\r\n  min-width: 40px;\r\n  height: 40px;\r\n  border: solid black 2px;\r\n  display: inline-flex;\r\n  margin: 10px 15px 10px 0;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst CloseIcon = styled.span`\r\n  position: absolute;\r\n  right: 5px;\r\n  top: 10px;\r\n  width: 32px;\r\n  height: 32px;\r\n  opacity: 0.4;\r\n  cursor: pointer;\r\n  &:hover {\r\n    opacity: 1;\r\n  }\r\n  &:before,\r\n  &:after {\r\n    position: absolute;\r\n    left: 15px;\r\n    content: ' ';\r\n    height: 20px;\r\n    width: 2px;\r\n    background-color: white;\r\n  }\r\n  &:before {\r\n    transform: rotate(45deg);\r\n  }\r\n  &:after {\r\n    transform: rotate(-45deg);\r\n  }\r\n`;\r\n\r\nconst HideIcon = styled.div`\r\n  left: 10px;\r\n  top: 14px;\r\n  position: absolute;\r\n  cursor: pointer;\r\n  display: inline-block;\r\n  border-right: 4px solid white;\r\n  border-bottom: 4px solid white;\r\n  opacity: 0.4;\r\n  width: 10px;\r\n  height: 10px;\r\n  &:hover {\r\n    opacity: 1;\r\n  }\r\n  &.hideChevron {\r\n    transform: rotate(-225deg);\r\n  }\r\n  &.expandChevron {\r\n    transform: rotate(-45deg);\r\n  }\r\n`;\r\n\r\nconst isNotStop = (stop) => {\r\n  return !stop.arrivalTime && !stop.departureTime;\r\n};\r\n\r\nconst isPassed = (stop, time) => {\r\n  // Sometimes stop.departureDelay is undefined.\r\n  const timeToCompare = stop.departureTime || stop.arrivalTime || 0;\r\n  const delayToCompare = stop.departureDelay || stop.arrivalDelay || 0;\r\n  return !isNotStop(stop) && timeToCompare + delayToCompare <= time;\r\n};\r\n\r\nconst RouteSchedule = ({ map, vehicle, trackerLayer, setSelectedVehicle }) => {\r\n  const [hideModal, setHideModal] = useState<boolean>(false);\r\n  let modalWidth;\r\n  if (!vehicle) {\r\n    modalWidth = '0';\r\n  } else if (hideModal) {\r\n    modalWidth = '40px';\r\n  } else {\r\n    modalWidth = '350px';\r\n  }\r\n  const closeRouteSchedule = () => {\r\n    setSelectedVehicle(null);\r\n    trackerLayer.selectedVehicleId = null;\r\n    if (trackerLayer.map.getSource('routeLines')) {\r\n      trackerLayer.map.removeLayer('routeLines');\r\n      trackerLayer.map.removeSource('routeLines');\r\n    }\r\n    if (trackerLayer.map.getSource('routePoints')) {\r\n      trackerLayer.map.removeLayer('routePoints');\r\n      trackerLayer.map.removeSource('routePoints');\r\n    }\r\n  };\r\n  return (\r\n    <RouteScheduleContainer modalWidth={modalWidth}>\r\n      {modalWidth !== '0' ? (\r\n        <HideIcon\r\n          className={hideModal ? 'expandChevron' : 'hideChevron'}\r\n          onClick={() => setHideModal((prevState) => !prevState)}\r\n        ></HideIcon>\r\n      ) : null}\r\n      {modalWidth === '350px' ? (\r\n        <ContentContainer>\r\n          <CloseIcon onClick={closeRouteSchedule} />\r\n          <div style={{ display: 'flex' }}>\r\n            <VehicleIcon\r\n              style={{\r\n                backgroundColor: vehicle?.backgroundColor\r\n                  ? vehicle?.backgroundColor\r\n                  : 'white',\r\n                color: vehicle?.color ? vehicle?.color : 'black',\r\n              }}\r\n            >\r\n              {vehicle.shortName}\r\n            </VehicleIcon>\r\n            <div>\r\n              <div style={{ fontWeight: 'bold' }}>{vehicle.longName}</div>\r\n              <div style={{ fontSize: '14px' }}>\r\n                <div>{vehicle.shortName}</div>\r\n                <div>{vehicleTypes[vehicle.vehicleType]}</div>\r\n                <div>Operator: {vehicle.operator}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* operating info todo??? */}\r\n          <div style={{ marginTop: '20px' }}>\r\n            {vehicle.stations.map((station, index) => (\r\n              <StationInfo\r\n                map={map}\r\n                key={station.stationId}\r\n                station={station}\r\n                isStationPassed={isPassed(station, trackerLayer.currTime)}\r\n                isNotStation={isNotStop(station)}\r\n                isFirstStation={index === 0}\r\n                isLastStation={index === vehicle.stations.length - 1}\r\n              />\r\n            ))}\r\n          </div>\r\n        </ContentContainer>\r\n      ) : null}\r\n    </RouteScheduleContainer>\r\n  );\r\n};\r\nexport default RouteSchedule;\r\n","import { Feature, MultiPoint } from 'geojson';\r\nimport { GeoJSONSource, Map, NavigationControl } from 'mapbox-gl';\r\nimport 'mapbox-gl/dist/mapbox-gl.css';\r\nimport { translateTrajCollResponse } from 'mobility-toolbox-js/api/trajserv/TrajservAPIUtils';\r\nimport { getUTCTimeString } from 'mobility-toolbox-js/common/timeUtils';\r\nimport { TrajservLayer } from 'mobility-toolbox-js/mapbox';\r\nimport { transform as transformCoords } from 'ol/proj';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport RouteSchedule from '../components/RouteSchedule';\r\nimport './App.scss';\r\n\r\nconst App = () => {\r\n  const [trackerLayer, setTrackerLayer] = useState<any>(null);\r\n  const [map, setMap] = useState<any>(null);\r\n  const [selectedVehicle, _setSelectedVehicle] = useState<any>(null);\r\n  const selectedVehicleRef = useRef(selectedVehicle);\r\n  const setSelectedVehicle = (newState: any) => {\r\n    selectedVehicleRef.current = newState;\r\n    _setSelectedVehicle(newState);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let TEST_API_KEY;\r\n    const fetchApiKey = async () => {\r\n      await fetch('https://developer.geops.io/publickey')\r\n        .then((res) => res.json())\r\n        .then((res) => {\r\n          TEST_API_KEY = res.key;\r\n        });\r\n    };\r\n    fetchApiKey().then(() => {\r\n      const mapboxMap = new Map({\r\n        container: 'map',\r\n        style: `https://maps.geops.io/styles/travic/style.json?key=${TEST_API_KEY}`,\r\n        center: [21, 52.25],\r\n        // center: [-122.3, 47.6],\r\n        zoom: 8,\r\n      });\r\n      mapboxMap.addControl(\r\n        new NavigationControl({\r\n          showCompass: false,\r\n        }),\r\n        'bottom-right'\r\n      );\r\n      mapboxMap.dragRotate.disable();\r\n      mapboxMap.touchZoomRotate.disableRotation();\r\n      const tracker = new TrajservLayer({\r\n        url: 'https://api.geops.io/tracker/v1',\r\n        apiKey: TEST_API_KEY,\r\n        //api:\r\n      });\r\n      tracker.highlightTrajectory = () => {\r\n        tracker.api\r\n          .fetchTrajectoryById(\r\n            tracker.getParams({\r\n              id: tracker.journeyId,\r\n              time: getUTCTimeString(tracker.currTime),\r\n            })\r\n          )\r\n          .then((traj) => {\r\n            const { p: multiLine, c: trajectoryColor } = traj;\r\n            const coordinates: any = [];\r\n            multiLine.forEach((line) => {\r\n              line.forEach((point) => {\r\n                coordinates.push(\r\n                  transformCoords([point.x, point.y], 'EPSG:3857', 'EPSG:4326')\r\n                );\r\n              });\r\n            });\r\n            if (tracker.map.getSource('routeLines')) {\r\n              tracker.map.removeLayer('routeLines');\r\n              tracker.map.removeSource('routeLines');\r\n            }\r\n            if (tracker.map.getSource('routePoints')) {\r\n              tracker.map.removeLayer('routePoints');\r\n              tracker.map.removeSource('routePoints');\r\n            }\r\n            const stationsCoords = tracker.stationsCoords.map((station) =>\r\n              transformCoords(\r\n                [station[0], station[1]],\r\n                'EPSG:3857',\r\n                'EPSG:4326'\r\n              )\r\n            );\r\n            if (stationsCoords) {\r\n              tracker.map.addSource('routePoints', {\r\n                type: 'geojson',\r\n                data: {\r\n                  type: 'Feature',\r\n                  properties: {},\r\n                  geometry: {\r\n                    type: 'MultiPoint',\r\n                    coordinates: stationsCoords,\r\n                  },\r\n                },\r\n              });\r\n              tracker.map.addLayer(\r\n                {\r\n                  id: 'routePoints',\r\n                  type: 'circle',\r\n                  source: 'routePoints',\r\n                  paint: {\r\n                    'circle-radius': 6,\r\n                    // 'circle-stroke-color': 'black',\r\n                    // 'circle-stroke-width': 1,\r\n                    'circle-color': trajectoryColor\r\n                      ? '#' + trajectoryColor\r\n                      : '#888',\r\n                  },\r\n                },\r\n                tracker.key\r\n              );\r\n            }\r\n            if (coordinates) {\r\n              tracker.map.addSource('routeLines', {\r\n                type: 'geojson',\r\n                data: {\r\n                  type: 'Feature',\r\n                  properties: {},\r\n                  geometry: {\r\n                    type: 'LineString',\r\n                    coordinates,\r\n                  },\r\n                },\r\n              });\r\n              tracker.map.addLayer(\r\n                {\r\n                  id: 'routeLines',\r\n                  type: 'line',\r\n                  source: 'routeLines',\r\n                  layout: {\r\n                    'line-join': 'round',\r\n                    'line-cap': 'round',\r\n                  },\r\n                  paint: {\r\n                    'line-color': trajectoryColor\r\n                      ? '#' + trajectoryColor\r\n                      : '#888',\r\n                    'line-width': 5,\r\n                  },\r\n                },\r\n                'routePoints'\r\n              );\r\n            }\r\n          })\r\n          .catch(() => {});\r\n      };\r\n      tracker.onClick((vehicle) => {\r\n        if (!vehicle) {\r\n          setSelectedVehicle(null);\r\n          if (tracker.map.getSource('routeLines')) {\r\n            tracker.map.removeLayer('routeLines');\r\n            tracker.map.removeSource('routeLines');\r\n          }\r\n          if (tracker.map.getSource('routePoints')) {\r\n            tracker.map.removeLayer('routePoints');\r\n            tracker.map.removeSource('routePoints');\r\n          }\r\n        } else if (selectedVehicleRef?.current?.id !== vehicle?.id) {\r\n          setSelectedVehicle(vehicle);\r\n          tracker.highlightTrajectory();\r\n        }\r\n      });\r\n      setTrackerLayer(tracker);\r\n\r\n      mapboxMap.on('load', async () => {\r\n        tracker.init(mapboxMap);\r\n      });\r\n      setMap(mapboxMap);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          height: '100vh',\r\n          width: '100vw',\r\n          position: 'relative',\r\n        }}\r\n      >\r\n        <RouteSchedule\r\n          map={map}\r\n          trackerLayer={trackerLayer}\r\n          vehicle={selectedVehicle}\r\n          setSelectedVehicle={setSelectedVehicle}\r\n        ></RouteSchedule>\r\n        <div id='map' style={{ flex: 1 }} tabIndex={0}></div>\r\n      </div>\r\n      <div\r\n        style={{\r\n          position: 'absolute',\r\n          top: '10px',\r\n          right: '10px',\r\n          display: 'block',\r\n          width: '300px',\r\n          zIndex: 1000,\r\n        }}\r\n      >\r\n        <a\r\n          href='./assets/system_transportowy.pdf'\r\n          target='_blank'\r\n          rel='noopener noreferrer'\r\n        >\r\n          <img\r\n            style={{\r\n              height: '66px',\r\n            }}\r\n            src='./assets/logo2.png'\r\n            alt=''\r\n          />\r\n        </a>\r\n        <a\r\n          href='https://www.gispartner.pl/'\r\n          target='_blank'\r\n          rel='noopener noreferrer'\r\n        >\r\n          <img\r\n            style={{\r\n              height: '50px',\r\n            }}\r\n            src='./assets/logo1.png'\r\n            alt=''\r\n          />\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React, { useState } from 'react';\r\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\r\nimport 'react-tabs/style/react-tabs.css';\r\nimport polyline from '@mapbox/polyline';\r\nimport styled from 'styled-components';\r\nconst PROXY_URL = '';\r\nconst BASE_URL = 'http://localhost:8080/onebusaway-api-webapp/api/where/';\r\nconst KEY = 'TEST';\r\nconst FORMAT = '.json';\r\n\r\nconst MethodButton = styled.button`\r\n  background-color: ${({ isSelected }) =>\r\n    isSelected ? 'rgba(0,0,0,0.4)' : 'rgba(0,0,0,0.1)'};\r\n  border: 1px solid black;\r\n  border-radius: 2px;\r\n  outline: none;\r\n  padding: 5px 10px;\r\n  margin: 0px 5px 0px 0px;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst Methods = [\r\n  'trips-for-location',\r\n  'routes-for-location',\r\n  'stops-for-location',\r\n  'block',\r\n  'shape',\r\n  'stop',\r\n  'arrivals-and-departures-for-stop',\r\n  'schedule-for-stop',\r\n  'shape-ids-for-agency',\r\n];\r\n\r\nconst Documentation = () => {\r\n  const [selectedMethod, setSelectedMethod] = useState<any>(null);\r\n  const [response, setResponse] = useState<any>(null);\r\n  const [referencesResponse, setReferencesResponse] = useState<any>(null);\r\n  const [methodsList, setMethodsList] = useState<any>(null);\r\n\r\n  const setResponses = (data: any) => {\r\n    let resString;\r\n    if (data.data.list) {\r\n      resString = JSON.stringify(data.data.list, null, '    ');\r\n    } else {\r\n      resString = JSON.stringify(data.data.entry, null, '    ');\r\n    }\r\n    const res = (\r\n      <>\r\n        <pre\r\n          style={{ marginTop: '0px' }}\r\n          dangerouslySetInnerHTML={{ __html: resString }}\r\n        ></pre>\r\n      </>\r\n    );\r\n    const references = data.data.references;\r\n    const refRes = (\r\n      <Tabs>\r\n        <TabList>\r\n          {Object.keys(references).map((key) => (\r\n            <Tab key={key}>\r\n              {key}\r\n              <span\r\n                style={{\r\n                  display: 'inline-block',\r\n                  backgroundColor: references[key].length ? 'green' : 'grey',\r\n                  width: '10px',\r\n                  height: '10px',\r\n                  borderRadius: '50%',\r\n                  marginLeft: '5px',\r\n                }}\r\n              ></span>\r\n            </Tab>\r\n          ))}\r\n        </TabList>\r\n        {Object.keys(references).map((key) => (\r\n          <TabPanel key={key}>\r\n            <pre\r\n              style={{ marginTop: '0px' }}\r\n              dangerouslySetInnerHTML={{\r\n                __html: JSON.stringify(references[key], null, '    '),\r\n              }}\r\n            ></pre>\r\n          </TabPanel>\r\n        ))}\r\n      </Tabs>\r\n    );\r\n    setResponse(res);\r\n    setReferencesResponse(refRes);\r\n  };\r\n  const clearCurrentReponses = () => {\r\n    setMethodsList(null);\r\n    setResponse(null);\r\n    setReferencesResponse(null);\r\n  };\r\n  const blockMethod = () => {\r\n    setSelectedMethod('block');\r\n    clearCurrentReponses();\r\n    fetch(`${PROXY_URL}${BASE_URL}block/1_5908633${FORMAT}?key=${KEY}`)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        console.log('block', data);\r\n        setResponses(data);\r\n      });\r\n  };\r\n\r\n  const shapeMethod = () => {\r\n    setSelectedMethod('shape');\r\n    clearCurrentReponses();\r\n    fetch(`${PROXY_URL}${BASE_URL}shape/1_11048006${FORMAT}?key=${KEY}`)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        console.log('shape', data);\r\n        console.log(\r\n          'decoded points',\r\n          polyline\r\n            .decode(data.data.entry.points)\r\n            .map((point) => point.reverse())\r\n        );\r\n        setResponses(data);\r\n      });\r\n  };\r\n\r\n  const stopMethod = () => {\r\n    setSelectedMethod('stop');\r\n    clearCurrentReponses();\r\n    fetch(`${PROXY_URL}${BASE_URL}stop/1_29247${FORMAT}?key=${KEY}`)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        console.log('stop', data);\r\n        setResponses(data);\r\n      });\r\n  };\r\n\r\n  const scheduleForStopMethod = () => {\r\n    setSelectedMethod('schedule-for-stop');\r\n    clearCurrentReponses();\r\n    fetch(\r\n      `${PROXY_URL}${BASE_URL}schedule-for-stop/1_29247${FORMAT}?key=${KEY}`\r\n    )\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        console.log('schedule-for-stop', data);\r\n        setResponses(data);\r\n      });\r\n  };\r\n\r\n  const shapesIdsForAgencyMethod = () => {\r\n    setSelectedMethod('shape-ids-for-agency');\r\n    clearCurrentReponses();\r\n    fetch(`${PROXY_URL}${BASE_URL}shape-ids-for-agency/1${FORMAT}?key=${KEY}`)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        console.log('shape-ids-for-agency', data);\r\n        setResponses(data);\r\n      });\r\n  };\r\n\r\n  const routesForLocationMethod = () => {\r\n    setSelectedMethod('routes-for-location');\r\n    clearCurrentReponses();\r\n    fetch(\r\n      `${PROXY_URL}${BASE_URL}routes-for-location${FORMAT}?key=${KEY}&lat=51&lon=17&latSpan=0.16&lonSpan=0.16`\r\n    )\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        console.log('routes-for-location', data);\r\n        setResponses(data);\r\n      });\r\n  };\r\n  const tripsForLocationMethod = () => {\r\n    setSelectedMethod('trips-for-location');\r\n    clearCurrentReponses();\r\n    const links = (\r\n      <ul>\r\n        <li>block {'->'} references: trips: blockId</li>\r\n        <li>shape {'->'} references: trips: shapeId</li>\r\n      </ul>\r\n    );\r\n    setMethodsList(links);\r\n    fetch(\r\n      `${PROXY_URL}${BASE_URL}trips-for-location${FORMAT}?key=${KEY}&lat=51&lon=17&latSpan=0.16&lonSpan=0.16&includeStatus=true&includeSchedule=false` //\r\n    )\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        console.log('trips-for-location', data);\r\n        setResponses(data);\r\n      });\r\n  };\r\n  const stopsForLocationMethod = () => {\r\n    setSelectedMethod('stops-for-location');\r\n    clearCurrentReponses();\r\n    fetch(\r\n      `${PROXY_URL}${BASE_URL}stops-for-location${FORMAT}?key=${KEY}&lat=51&lon=17&latSpan=0.16&lonSpan=0.16&includeSchedule=true` //\r\n    )\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        console.log('stops-for-location', data);\r\n        setResponses(data);\r\n      });\r\n  };\r\n  const arrivalsAndDeparturesForStopMethod = () => {\r\n    setSelectedMethod('arrivals-and-departures-for-stop');\r\n    clearCurrentReponses();\r\n    fetch(\r\n      `${PROXY_URL}${BASE_URL}arrivals-and-departures-for-stop/1_29247${FORMAT}?key=${KEY}` //\r\n    )\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        console.log('arrivals-and-departures-for-stop', data);\r\n        setResponses(data);\r\n      });\r\n  };\r\n  const getMethodRef = (method) => {\r\n    switch (method) {\r\n      case 'trips-for-location':\r\n        return tripsForLocationMethod;\r\n      case 'routes-for-location':\r\n        return routesForLocationMethod;\r\n      case 'stops-for-location':\r\n        return stopsForLocationMethod;\r\n      case 'stop':\r\n        return stopMethod;\r\n      case 'block':\r\n        return blockMethod;\r\n      case 'shape':\r\n        return shapeMethod;\r\n      case 'arrivals-and-departures-for-stop':\r\n        return arrivalsAndDeparturesForStopMethod;\r\n      case 'schedule-for-stop':\r\n        return scheduleForStopMethod;\r\n      case 'shape-ids-for-agency':\r\n        return shapesIdsForAgencyMethod;\r\n    }\r\n  };\r\n  return (\r\n    <div style={{ padding: '10px 5px' }}>\r\n      {Methods.map((method) => (\r\n        <MethodButton\r\n          key={method}\r\n          isSelected={selectedMethod === method}\r\n          onClick={getMethodRef(method)}\r\n        >\r\n          {method}\r\n        </MethodButton>\r\n      ))}\r\n      {/* <div>Methods:</div>\r\n      {methodsList} */}\r\n      <div style={{ display: 'flex' }}>\r\n        <div style={{ width: '50%' }}>\r\n          <strong>Response:</strong>\r\n          {response}\r\n        </div>\r\n        <div style={{ width: '50%' }}>\r\n          <strong>References</strong>:{referencesResponse}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Documentation;\r\n","import TrajservAPI from 'mobility-toolbox-js/api/trajserv/TrajservAPI';\r\nimport { transform as transformCoords } from 'ol/proj';\r\nimport LineString from 'ol/geom/LineString';\r\n\r\n\r\nconst KEY = window.globalConfig.apiKey;\r\nconst FORMAT = window.globalConfig.apiResponseFormat;\r\nconst BASE_URL = window.globalConfig.apiUrl;\r\n\r\nexport class TrajservGpApi extends TrajservAPI{\r\n    \r\n    fetchTrajectories  = (params, abortController = {}) => {\r\n        const { date, btime, etime, bbox } = params;\r\n        const dateFormatted =\r\n          date.slice(0, 4) + '-' + date.slice(4, 6) + '-' + date.slice(6, 8);\r\n        const startTime = Date.parse(dateFormatted + ' ' + btime + 'Z');\r\n        const endTime = Date.parse(dateFormatted + ' ' + etime + 'Z');\r\n        const bboxCoords = bbox.split(',');\r\n        const firstCoords = [bboxCoords[0], bboxCoords[1]];\r\n        const secondCoords = [bboxCoords[2], bboxCoords[3]];\r\n        const translatedFirstCoords = transformCoords(\r\n          [firstCoords[0], firstCoords[1]],\r\n          'EPSG:3857',\r\n          'EPSG:4326'\r\n        );\r\n        const translatedSecondCoords = transformCoords(\r\n          [secondCoords[0], secondCoords[1]],\r\n          'EPSG:3857',\r\n          'EPSG:4326'\r\n        );\r\n        const latFrom = translatedFirstCoords[1];\r\n        const lonFrom = translatedFirstCoords[0];\r\n        const latTo = translatedSecondCoords[1];\r\n        const lonTo = translatedSecondCoords[0];\r\n        return fetch(\r\n          `${BASE_URL}trajectories${FORMAT}?key=${KEY}&startTime=${startTime}&endTime=${endTime}&latFrom=${latFrom}&lonFrom=${lonFrom}&latTo=${latTo}&lonTo=${lonTo}`,\r\n          {\r\n            signal: abortController.signal,\r\n          }\r\n        )\r\n          .then((res) => res.json())\r\n          .then((d) => {\r\n            const trajectories = d.data;\r\n            trajectories.forEach(\r\n              (trajectory) => {\r\n                trajectory.geometry = new LineString(\r\n                  trajectory.geometry.map((point) =>\r\n                    transformCoords(\r\n                      [point[1], point[0]],\r\n                      'EPSG:4326',\r\n                      'EPSG:3857'\r\n                    )\r\n                  )\r\n                );\r\n                trajectory.type = 2;\r\n              }\r\n                \r\n            );\r\n\r\n            return trajectories;\r\n          })\r\n          .catch((e) => {\r\n            console.log(e);\r\n          });\r\n      };\r\n\r\n    fetchTrajectoryStations(params, abortController = {}){\r\n        return fetch(\r\n          `${BASE_URL}trip-details/${params.id}${FORMAT}?key=${KEY}&includeStatus=true&includeSchedule=true`,\r\n          {\r\n            signal: abortController.signal,\r\n          }\r\n        )\r\n          .then((res) => res.json())\r\n          .then((d) => {\r\n            const {\r\n              tripId,\r\n              schedule: { stopTimes },\r\n              serviceDate,\r\n            } = d.data.entry;\r\n            const { agencies, trips, routes, stops } = d.data.references;\r\n            const trip = trips.find(({ id }) => tripId == id);\r\n            const { routeId, tripHeadsign } = trip;\r\n            const route = routes.find(({ id }) => routeId == id);\r\n            const { agencyId, color, textColor, type } = route;\r\n            const agency = agencies.find(({ id }) => agencyId == id);\r\n            const { url, timezone, name } = agency;\r\n            const stations = [];\r\n            stopTimes.forEach((stopTime) => {\r\n              const { arrivalTime, departureTime, stopId } = stopTime;\r\n              const stop = stops.find(({ id }) => id == stopId);\r\n              const { lat, lon, name: stopName, wheelchairBoarding } = stop;\r\n              stations.push({\r\n                arrivalDelay: undefined, //todo\r\n                arrivalTime: serviceDate + arrivalTime * 1000,\r\n                cancelled: false, //todo\r\n                coordinates: [lon, lat],\r\n                departureDelay: undefined, //todo\r\n                departureTime: serviceDate + departureTime * 1000,\r\n                noDropOff: true, //todo\r\n                noPickUp: true, //todo\r\n                stationId: stopId,\r\n                stationName: stopName,\r\n                wheelchairAccessible: wheelchairBoarding,\r\n              });\r\n            });\r\n            const obj = {\r\n              bicyclesAllowed: true, //todo\r\n              backgroundColor: color,\r\n              color: textColor,\r\n              destination: tripHeadsign,\r\n              feedsId: 287, //todo\r\n              id: tripId,\r\n              longName: tripHeadsign,\r\n              operatingInformations: {\r\n                // operatingPeriod: 31,\r\n                // notOperatingDays: Array(11),\r\n                // additionalOperatingDays: Array(0),\r\n              }, //todo\r\n              operator: name,\r\n              operatorTimeZone: timezone,\r\n              operatorUrl: url,\r\n              realTime: 0, // ? todo\r\n              routeIdentifier: routeId,\r\n              shortName: route.shortName,\r\n              stations: stations,\r\n              vehicleType: type,\r\n              wheelchairAccessible: true, //todo\r\n            };\r\n            //console.log(obj);\r\n            return obj;\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n            console.log(\r\n              `${BASE_URL}trip-details/${params.id}${FORMAT}?key=${KEY}&includeStatus=true&includeSchedule=true`\r\n            );\r\n          });\r\n      };\r\n}","import { Map, NavigationControl } from 'mapbox-gl';\r\nimport 'mapbox-gl/dist/mapbox-gl.css';\r\nimport { TrajservLayer } from 'mobility-toolbox-js/mapbox';\r\nimport { transform as transformCoords } from 'ol/proj';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport RouteSchedule from '../components/RouteSchedule';\r\nimport { TrajservGpApi } from '../gp-api/TrajservGpApi';\r\n\r\nconst KEY = (window as any).globalConfig.apiKey;\r\nconst FORMAT = (window as any).globalConfig.apiResponseFormat;\r\nconst BASE_URL = (window as any).globalConfig.apiUrl;\r\nconst INTERVAL = (window as any).globalConfig.interval;\r\n\r\nconst GtfsRT = () => {\r\n  const [trackerLayer, setTrackerLayer] = useState<any>(null);\r\n  const [map, setMap] = useState<any>(null);\r\n  const [selectedVehicle, _setSelectedVehicle] = useState<any>(null);\r\n  const selectedVehicleRef = useRef(selectedVehicle);\r\n  const setSelectedVehicle = (newState: any) => {\r\n    selectedVehicleRef.current = newState;\r\n    _setSelectedVehicle(newState);\r\n  };\r\n  useEffect(() => {\r\n    // let TEST_API_KEY;\r\n    // const fetchApiKey = async () => {\r\n    //   await fetch('https://developer.geops.io/publickey')\r\n    //     .then((res) => res.json())\r\n    //     .then((res) => {\r\n    //       TEST_API_KEY = res.key;\r\n    //     });\r\n    // };\r\n\r\n    // fetchApiKey().then(() => {\r\n    const mapboxMap = new Map({\r\n      container: 'map',\r\n      style: `https://api.maptiler.com/maps/streets/style.json?key=fxrAn6nevCCpCCxhndyU`,\r\n      center: [20, 50],\r\n      zoom: 8,\r\n    });\r\n    mapboxMap.addControl(\r\n      new NavigationControl({\r\n        showCompass: false,\r\n      }),\r\n      'bottom-right'\r\n    );\r\n    mapboxMap.dragRotate.disable();\r\n    mapboxMap.touchZoomRotate.disableRotation();\r\n    const tracker = new TrajservLayer({\r\n      api: new TrajservGpApi(),\r\n    });\r\n\r\n    tracker.requestIntervalSeconds = INTERVAL;\r\n    tracker.highlightTrajectory = (vehicle) => {\r\n      if (vehicle) {\r\n        fetch(`${BASE_URL}trip-shape/${tracker.journeyId}${FORMAT}?key=${KEY}`)\r\n          .then((res) => res.json())\r\n          .then((d) => {\r\n            const coordinates: any = d.data;\r\n            if (tracker.map.getSource('routeLines')) {\r\n              tracker.map.removeLayer('routeLines');\r\n              tracker.map.removeSource('routeLines');\r\n            }\r\n            if (tracker.map.getSource('routePoints')) {\r\n              tracker.map.removeLayer('routePoints');\r\n              tracker.map.removeSource('routePoints');\r\n            }\r\n            const stationsCoords = tracker.stationsCoords.map((station) =>\r\n              transformCoords(\r\n                [station[0], station[1]],\r\n                'EPSG:3857',\r\n                'EPSG:4326'\r\n              )\r\n            );\r\n            if (stationsCoords) {\r\n              tracker.map.addSource('routePoints', {\r\n                type: 'geojson',\r\n                data: {\r\n                  type: 'Feature',\r\n                  properties: {},\r\n                  geometry: {\r\n                    type: 'MultiPoint',\r\n                    coordinates: stationsCoords,\r\n                  },\r\n                },\r\n              });\r\n              tracker.map.addLayer(\r\n                {\r\n                  id: 'routePoints',\r\n                  type: 'circle',\r\n                  source: 'routePoints',\r\n                  paint: {\r\n                    'circle-radius': 6,\r\n                    // 'circle-stroke-color': 'black',\r\n                    // 'circle-stroke-width': 1,\r\n                    'circle-color': vehicle.color\r\n                      ? '#' + vehicle.color\r\n                      : '#888',\r\n                  },\r\n                },\r\n                tracker.key\r\n              );\r\n            }\r\n            if (coordinates) {\r\n              tracker.map.addSource('routeLines', {\r\n                type: 'geojson',\r\n                data: {\r\n                  type: 'Feature',\r\n                  properties: {},\r\n                  geometry: {\r\n                    type: 'LineString',\r\n                    coordinates,\r\n                  },\r\n                },\r\n              });\r\n              tracker.map.addLayer(\r\n                {\r\n                  id: 'routeLines',\r\n                  type: 'line',\r\n                  source: 'routeLines',\r\n                  layout: {\r\n                    'line-join': 'round',\r\n                    'line-cap': 'round',\r\n                  },\r\n                  paint: {\r\n                    'line-color': vehicle.color ? '#' + vehicle.color : '#888',\r\n                    'line-width': 5,\r\n                  },\r\n                },\r\n                'routePoints'\r\n              );\r\n            }\r\n          })\r\n          .catch((e) => console.log(e));\r\n      }\r\n    };\r\n\r\n    tracker.onClick((vehicle) => {\r\n      if (!vehicle) {\r\n        setSelectedVehicle(null);\r\n        if (tracker.map.getSource('routeLines')) {\r\n          tracker.map.removeLayer('routeLines');\r\n          tracker.map.removeSource('routeLines');\r\n        }\r\n        if (tracker.map.getSource('routePoints')) {\r\n          tracker.map.removeLayer('routePoints');\r\n          tracker.map.removeSource('routePoints');\r\n        }\r\n      } else if (selectedVehicleRef?.current?.id !== vehicle?.id) {\r\n        setSelectedVehicle(vehicle);\r\n        tracker.highlightTrajectory(vehicle);\r\n      }\r\n    });\r\n\r\n    mapboxMap.dragRotate.disable();\r\n    mapboxMap.touchZoomRotate.disableRotation();\r\n    setTrackerLayer(tracker);\r\n    mapboxMap.on('load', () => {\r\n      tracker.init(mapboxMap);\r\n    });\r\n    setMap(mapboxMap);\r\n    // });\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          height: '100vh',\r\n          width: '100vw',\r\n          position: 'relative',\r\n        }}>\r\n        <RouteSchedule\r\n          map={map}\r\n          trackerLayer={trackerLayer}\r\n          vehicle={selectedVehicle}\r\n          setSelectedVehicle={setSelectedVehicle}></RouteSchedule>\r\n        <div id='map' style={{ flex: 1 }} tabIndex={0}></div>\r\n      </div>\r\n      <div\r\n        style={{\r\n          position: 'absolute',\r\n          top: '10px',\r\n          right: '10px',\r\n          display: 'block',\r\n          width: '300px',\r\n          zIndex: 1000,\r\n        }}>\r\n        <a\r\n          href='./assets/system_transportowy.pdf'\r\n          target='_blank'\r\n          rel='noopener noreferrer'>\r\n          <img\r\n            style={{\r\n              height: '66px',\r\n            }}\r\n            src='./assets/logo2.png'\r\n            alt=''\r\n          />\r\n        </a>\r\n        <a\r\n          href='https://www.gispartner.pl/'\r\n          target='_blank'\r\n          rel='noopener noreferrer'>\r\n          <img\r\n            style={{\r\n              height: '50px',\r\n            }}\r\n            src='./assets/logo1.png'\r\n            alt=''\r\n          />\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GtfsRT;\r\n","import 'mapbox-gl/dist/mapbox-gl.css';\r\nimport { Map, MapboxLayer, TrajservLayer } from 'mobility-toolbox-js/ol';\r\nimport 'ol/ol.css';\r\nimport { transform as transformCoords } from 'ol/proj';\r\nimport View from 'ol/View';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport RouteSchedule from '../components/RouteSchedule';\r\nimport { TrajservGpApi } from '../gp-api/TrajservGpApi';\r\n\r\nconst INTERVAL = (window as any).globalConfig.interval;\r\nconst GtfsOL = () => {\r\n  const [trackerLayer, setTrackerLayer] = useState<any>(null);\r\n  const [map, setMap] = useState<any>(null);\r\n  const [selectedVehicle, _setSelectedVehicle] = useState<any>(null);\r\n  const selectedVehicleRef = useRef(selectedVehicle);\r\n  const setSelectedVehicle = (newState: any) => {\r\n    selectedVehicleRef.current = newState;\r\n    _setSelectedVehicle(newState);\r\n  };\r\n  useEffect(() => {\r\n    let TEST_API_KEY;\r\n    const fetchApiKey = async () => {\r\n      await fetch('https://developer.geops.io/publickey')\r\n        .then((res) => res.json())\r\n        .then((res) => {\r\n          TEST_API_KEY = res.key;\r\n        });\r\n    };\r\n\r\n    fetchApiKey().then(() => {\r\n      const olMap = new Map({\r\n        target: 'map',\r\n        view: new View({\r\n          center: transformCoords([17, 51.06], 'EPSG:4326', 'EPSG:3857'),\r\n          zoom: 13,\r\n        }),\r\n      });\r\n\r\n      const tracker = new TrajservLayer({\r\n        api: new TrajservGpApi(),\r\n      });\r\n\r\n      tracker.requestIntervalSeconds = INTERVAL;\r\n\r\n      const layer = new MapboxLayer({\r\n        url: `https://maps.geops.io/styles/travic/style.json?key=${TEST_API_KEY}`,\r\n      });\r\n      olMap.addLayer(layer);\r\n      olMap.addLayer(tracker);\r\n      setMap(olMap);\r\n    });\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          height: '100vh',\r\n          width: '100vw',\r\n          position: 'relative',\r\n        }}\r\n      >\r\n        <RouteSchedule\r\n          map={map}\r\n          trackerLayer={trackerLayer}\r\n          vehicle={selectedVehicle}\r\n          setSelectedVehicle={setSelectedVehicle}\r\n        ></RouteSchedule>\r\n        <div id='map' style={{ flex: 1 }} tabIndex={0}></div>\r\n      </div>\r\n      <div\r\n        style={{\r\n          position: 'absolute',\r\n          top: '10px',\r\n          right: '10px',\r\n          display: 'block',\r\n          width: '300px',\r\n          zIndex: 1000,\r\n        }}\r\n      >\r\n        <a\r\n          href='./assets/system_transportowy.pdf'\r\n          target='_blank'\r\n          rel='noopener noreferrer'\r\n        >\r\n          <img\r\n            style={{\r\n              height: '66px',\r\n            }}\r\n            src='./assets/logo2.png'\r\n            alt=''\r\n          />\r\n        </a>\r\n        <a\r\n          href='https://www.gispartner.pl/'\r\n          target='_blank'\r\n          rel='noopener noreferrer'\r\n        >\r\n          <img\r\n            style={{\r\n              height: '50px',\r\n            }}\r\n            src='./assets/logo1.png'\r\n            alt=''\r\n          />\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GtfsOL;\r\n","import { BrowserRouter, Switch, Route } from 'react-router-dom';\r\nimport React from 'react';\r\nimport App from './views/App';\r\nimport Documentation from './views/Documentation';\r\nimport GtfsRT from './views/GtfsRT';\r\nimport GtfsOL from './views/GtfsOL';\r\nconst Root = () => (\r\n  <BrowserRouter>\r\n    <Switch>\r\n      <Route exact path='/' component={GtfsRT} />\r\n      <Route exact path='/ol' component={GtfsOL} />\r\n      <Route exact path='/docs' component={Documentation} />\r\n      <Route exact path='/dev' component={App} />\r\n    </Switch>\r\n  </BrowserRouter>\r\n);\r\n\r\nexport default Root;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Root from './Root';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Root />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}